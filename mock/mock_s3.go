// Code generated by MockGen. DO NOT EDIT.
// Source: go-app/app (interfaces: S3)

// Package mock is a generated GoMock package.
package mock

import (
	s3 "github.com/aws/aws-sdk-go/service/s3"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockS3 is a mock of S3 interface
type MockS3 struct {
	ctrl     *gomock.Controller
	recorder *MockS3MockRecorder
}

// MockS3MockRecorder is the mock recorder for MockS3
type MockS3MockRecorder struct {
	mock *MockS3
}

// NewMockS3 creates a new mock instance
func NewMockS3(ctrl *gomock.Controller) *MockS3 {
	mock := &MockS3{ctrl: ctrl}
	mock.recorder = &MockS3MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockS3) EXPECT() *MockS3MockRecorder {
	return m.recorder
}

// GetPutObjectRequestURL mocks base method
func (m *MockS3) GetPutObjectRequestURL(arg0 *s3.PutObjectInput) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPutObjectRequestURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPutObjectRequestURL indicates an expected call of GetPutObjectRequestURL
func (mr *MockS3MockRecorder) GetPutObjectRequestURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPutObjectRequestURL", reflect.TypeOf((*MockS3)(nil).GetPutObjectRequestURL), arg0)
}

// PutObject mocks base method
func (m *MockS3) PutObject(arg0 *s3.PutObjectInput) (*s3.PutObjectOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutObject", arg0)
	ret0, _ := ret[0].(*s3.PutObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutObject indicates an expected call of PutObject
func (mr *MockS3MockRecorder) PutObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutObject", reflect.TypeOf((*MockS3)(nil).PutObject), arg0)
}
