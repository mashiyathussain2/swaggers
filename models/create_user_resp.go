// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateUserResp create user resp
//
// swagger:model CreateUserResp
type CreateUserResp struct {

	// email
	Email string `json:"email,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// id
	ID ObjectID `json:"id,omitempty"`

	// phone no
	PhoneNo *PhoneNumber `json:"phone_no,omitempty"`
}

// Validate validates this create user resp
func (m *CreateUserResp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhoneNo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateUserResp) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := m.ID.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("id")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("id")
		}
		return err
	}

	return nil
}

func (m *CreateUserResp) validatePhoneNo(formats strfmt.Registry) error {
	if swag.IsZero(m.PhoneNo) { // not required
		return nil
	}

	if m.PhoneNo != nil {
		if err := m.PhoneNo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("phone_no")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("phone_no")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create user resp based on the context it is used
func (m *CreateUserResp) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePhoneNo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateUserResp) contextValidateID(ctx context.Context, formats strfmt.Registry) error {

	if err := m.ID.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("id")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("id")
		}
		return err
	}

	return nil
}

func (m *CreateUserResp) contextValidatePhoneNo(ctx context.Context, formats strfmt.Registry) error {

	if m.PhoneNo != nil {
		if err := m.PhoneNo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("phone_no")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("phone_no")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateUserResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateUserResp) UnmarshalBinary(b []byte) error {
	var res CreateUserResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
